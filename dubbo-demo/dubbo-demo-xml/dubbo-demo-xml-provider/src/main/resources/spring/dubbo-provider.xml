<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd">

    <dubbo:application metadata-type="remote" name="demo-provider"/> <!-- 没有设置id时，会尝试查找name等值 -->
    <dubbo:metadata-report address="zookeeper://127.0.0.1:2181"/>
    <dubbo:config-center address="zookeeper://127.0.0.1:2181"/>
    <dubbo:registry address="zookeeper://127.0.0.1:2181/all?default.name=test"/>

    <dubbo:protocol name="dubbo"/>

    <bean id="demoService" class="org.apache.dubbo.demo.provider.DemoServiceImqqp"/>
    <bean id="actives" class="org.apache.dubbo.demo.provider.DemoServiceImqqp"/>
    <bean id="greetingService" class="org.apache.dubbo.demo.provider.GreetingServiceImpl">
<!--        <dubbo:parameter key="greet" value="hello"/>-->   <!-- 此处为普通的spring bean，嵌套元素不能是dubbo元素，不然会报配置错误 -->
    </bean>


    <dubbo:service interface="org.apache.dubbo.demo.DemoService" class="org.apache.dubbo.demo.DemoService" ref="demoService" filter="">
         <dubbo:method name="sayHello2" timeout="1000" async="true" return="false"> <!-- 方法级别配置，并不是说展示哪个方法，就暴露哪个方法，与暴露没关 -->
<!--           <dubbo:argument index="0" type="java.lang.String" callback="true"/>-->  <!-- 若设置回调，type就需要接口类型-->
         </dubbo:method>
         <property name="actives" value="12"/>
         <property name="ref" ref="actives"/>
    </dubbo:service>
    <!--
      方法级别的设置，设值后url的值，会对应为，如timeout="1000"，<methodName>.timeout
      onreturn等方法，如果设置为false，则请求发送成功后直接返回Null
    -->

    <!-- <dubbo:service> 可以单独配置，也可以放在<dubbo:provider>中配置  -->
    <dubbo:provider timeout="2000" xml:base="dubbo-provider.xml" id="test">
        <dubbo:parameter key="name" value="zhang"/>
        <dubbo:parameter key="name" value="lisi"/>
        <dubbo:service interface="org.apache.dubbo.demo.GreetingService" ref="greetingService"/>
    </dubbo:provider>

    <!--
        <dubbo:parameter>
        同时该标签为<dubbo:protocol>或<dubbo:service>
        或<dubbo:provider>或<dubbo:reference>或<dubbo:consumer>的子标签，用于配置自定义参数，
        该配置项将作为扩展点设置自定义参数使用
    -->
</beans>
